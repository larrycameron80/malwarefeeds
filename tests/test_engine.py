# -*- coding: utf-8 -*-

import unittest
import os
from collections import Counter
from malwarefeeds.engine import Engine


class TestEngine(unittest.TestCase):

    def __init__(self, *args, **kwargs):
        super(TestEngine, self).__init__(*args, **kwargs)
        self.engine = Engine()
        self.cnt = Counter()

    def test_update(self):
        self.engine.update()
        assert self.engine is not None

    def on_url(self, feed_name, url):
        self.cnt[feed_name] += 1

    def test_read(self):
        file_path = os.path.join(
            os.path.dirname(os.path.realpath(__file__)),
            'files',
            'malcode.xml')
        with open(file_path, 'rb') as fp:
            self.engine.malcode = fp.read()
        self.engine.read(self.on_url)
        assert self.cnt['Malc0de'] == 491
        self.engine.malcode = None

        file_path = os.path.join(
            os.path.dirname(os.path.realpath(__file__)),
            'files',
            'mdl.xml')
        with open(file_path, 'rb') as fp:
            self.engine.mdl = fp.read()
        self.engine.read(self.on_url)
        assert self.cnt['Malware Domain List'] == 12
        self.engine.mdl = None

        file_path = os.path.join(
            os.path.dirname(os.path.realpath(__file__)),
            'files',
            'vxvault.txt')
        with open(file_path, 'rb') as fp:
            self.engine.vxvault = fp.read()
        self.engine.read(self.on_url)
        assert self.cnt['VxVault'] == 101
        self.engine.vxvault = None

        file_path = os.path.join(
            os.path.dirname(os.path.realpath(__file__)),
            'files',
            'malwareurls.txt')
        with open(file_path, 'rb') as fp:
            self.engine.malwareurls = fp.read()
        self.engine.read(self.on_url)
        assert self.cnt['Malware URLs'] == 521
